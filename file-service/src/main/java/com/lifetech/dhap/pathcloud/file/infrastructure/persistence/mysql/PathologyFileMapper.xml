<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lifetech.dhap.pathcloud.file.domain.PathologyFileRepository" >
  <resultMap id="BaseResultMap" type="com.lifetech.dhap.pathcloud.file.domain.model.PathologyFile" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="pathology_id" property="pathologyId" jdbcType="BIGINT" />
    <result column="operation" property="operation" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="tag" property="tag" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="keep_flag" property="keepFlag" jdbcType="BIT" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pathology_file
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lifetech.dhap.pathcloud.file.domain.model.PathologyFile" >
    insert into pathology_file (pathology_id, operation,
      type, content, keep_flag, tag,
      create_by, update_by, create_time, 
      update_time)
    values (#{pathologyId,jdbcType=BIGINT}, #{operation,jdbcType=INTEGER},
      #{type,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{keepFlag,jdbcType=BIT},  #{tag,jdbcType=VARCHAR},
      #{createBy,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT}, now(),
      now())
  </insert>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into pathology_file (pathology_id, operation,
    type, content, keep_flag,tag,
    create_by, update_by, create_time,
    update_time) values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.pathologyId,jdbcType=BIGINT}, #{item.operation,jdbcType=INTEGER},
      #{item.type,jdbcType=VARCHAR}, #{item.content,jdbcType=VARCHAR}, #{item.keepFlag,jdbcType=BIT}, #{item.tag,jdbcType=INTEGER},
      #{item.createBy,jdbcType=BIGINT}, #{item.createBy,jdbcType=BIGINT}, now(),
      now()
      )
    </foreach>
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.lifetech.dhap.pathcloud.file.domain.model.PathologyFile" >
    update pathology_file
    <set>
      <if test="keepFlag != null">keep_flag = #{keepFlag,jdbcType=BIT},</if>
      <if test="tag != null">tag = #{tag,jdbcType=VARCHAR},</if>
      <if test="updateBy != null">update_by = #{updateBy,jdbcType=BIGINT},</if>
      update_time = now()
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="batchUpdate" parameterType="java.util.List">
    update pathology_file set
    content =
    <foreach collection="list" item="item" index="index" separator=" " open="case ID" close="end">
      when #{item.id,jdbcType=BIGINT} then #{item.content,jdbcType=VARCHAR}
    </foreach>
    ,update_by =
    <foreach collection="list" item="item" index="index" separator=" " open="case ID" close="end">
      when #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=BIGINT}
    </foreach>
    ,update_time =
    <foreach collection="list" item="item" index="index" separator=" " open="case ID" close="end">
      when #{item.id,jdbcType=BIGINT} then now()
    </foreach>
    where ID in
    <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, pathology_id, operation, type, content, keep_flag, create_by, update_by, 
    create_time, update_time,tag
    from pathology_file
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, pathology_id, operation, type, content, keep_flag, create_by, update_by, 
    create_time, update_time,tag
    from pathology_file
  </select>

  <select id="selectFileByPathologyId" resultMap="BaseResultMap" parameterType="map" >
    select id, pathology_id, operation, type, content, keep_flag, create_by, update_by,
    create_time, update_time,tag
    from pathology_file
    where pathology_id = #{pathologyId,jdbcType=BIGINT} and operation = #{operation,jdbcType=INTEGER}
    <if test="tag != null">and tag = #{tag,jdbcType=VARCHAR}</if>
  </select>

  <select id="selectFileByBlockId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, pathology_id, operation, type, content, keep_flag, create_by, update_by,
    create_time, update_time,tag
    from pathology_file
    where operation=2 /*取材确认*/  AND pathology_id = #{blockId,jdbcType=BIGINT}
  </select>

  <select id="selectFileBySavename" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, pathology_id, operation, type, content, keep_flag, create_by, update_by,
    create_time, update_time,tag
    from pathology_file
    where content = #{savename,jdbcType=VARCHAR} limit 1
  </select>

  <select id="last" resultType="long" useCache="false">
    SELECT LAST_INSERT_ID()
  </select>

  <select id="selectConfirmFileByBlockIds" resultMap="BaseResultMap" parameterType="java.util.List">
  select id, pathology_id, operation, type, content, keep_flag, create_by, update_by,
    create_time, update_time,tag from pathology_file
    where pathology_id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
    AND operation=2 /*取材确认*/
    GROUP BY content
  </select>
</mapper>