package com.lifetech.dhap.pathcloud.tracking.domain;

import com.lifetech.dhap.pathcloud.tracking.application.condition.ArchiveCondition;
import com.lifetech.dhap.pathcloud.tracking.application.condition.SlideArchivingCon;
import com.lifetech.dhap.pathcloud.tracking.application.dto.BlockArchiveDto;
import com.lifetech.dhap.pathcloud.tracking.application.dto.SlideArchiveInfoDto;
import com.lifetech.dhap.pathcloud.tracking.domain.model.BlockArchive;
import com.lifetech.dhap.pathcloud.tracking.domain.model.Slide;

import java.util.List;

public interface BlockArchiveRepository {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_archive
     *
     * @mbggenerated Wed Jun 07 15:18:21 CST 2017
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_archive
     *
     * @mbggenerated Wed Jun 07 15:18:21 CST 2017
     */
    int insert(BlockArchive record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_archive
     *
     * @mbggenerated Wed Jun 07 15:18:21 CST 2017
     */
    BlockArchive selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_archive
     *
     * @mbggenerated Wed Jun 07 15:18:21 CST 2017
     */
    List<BlockArchive> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_archive
     *
     * @mbggenerated Wed Jun 07 15:18:21 CST 2017
     */
    int updateByPrimaryKey(BlockArchive record);

    List<Slide> selectInfoForArchiveByCondition(ArchiveCondition condition);

    List<BlockArchive> selectInfoForBorrowByCondition(ArchiveCondition condition);

    BlockArchive selectBySlideId(long slideId);

    List<SlideArchiveInfoDto> getSlidesArchivingInfo(SlideArchivingCon con);

    Long getSlidesArchivingInfoTotal(SlideArchivingCon con);

    List<BlockArchiveDto> getArchivingInfo(Long pid);
}