package com.lifetech.dhap.pathcloud.tracking.domain;

import com.lifetech.dhap.pathcloud.tracking.application.condition.PathTrackingCondition;
import com.lifetech.dhap.pathcloud.tracking.application.condition.ReportCondition;
import com.lifetech.dhap.pathcloud.tracking.application.dto.ReportQueryDto;
import com.lifetech.dhap.pathcloud.tracking.application.dto.SignQueryDto;
import com.lifetech.dhap.pathcloud.tracking.domain.model.PathTracking;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface PathTrackingRepository {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table path_tracking
     *
     * @mbggenerated Mon Jan 16 12:57:50 CST 2017
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table path_tracking
     *
     * @mbggenerated Mon Jan 16 12:57:50 CST 2017
     */
    int insert(PathTracking record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table path_tracking
     *
     * @mbggenerated Mon Jan 16 12:57:50 CST 2017
     */
    PathTracking selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table path_tracking
     *
     * @mbggenerated Mon Jan 16 12:57:50 CST 2017
     */
    List<PathTracking> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table path_tracking
     *
     * @mbggenerated Mon Jan 16 12:57:50 CST 2017
     */
    int updateByPrimaryKey(PathTracking record);

    Long last();

    List<PathTracking> selectByCondition(PathTrackingCondition condition);

    List<ReportQueryDto> reportQuery(ReportCondition con);

    Long reportQueryTotal(ReportCondition con);

    List<ReportQueryDto> printRecordQuery(Long id);

    List<ReportQueryDto> specialPrintRecordQuery(Long id);

    List<SignQueryDto> signQuery(ReportCondition con);

    Long signQueryTotal(ReportCondition con);

    PathTracking getPathTrackingByPathId(Long id);

    List<PathTracking> getPathTrackingByPathIdAndPrintSign(@Param("pathId") long pathId, @Param("printSign") Integer printSign);


}