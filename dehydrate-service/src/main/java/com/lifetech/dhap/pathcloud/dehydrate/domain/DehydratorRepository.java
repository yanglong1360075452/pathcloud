package com.lifetech.dhap.pathcloud.dehydrate.domain;

import com.lifetech.dhap.pathcloud.dehydrate.application.condition.DehydratorCondition;
import com.lifetech.dhap.pathcloud.dehydrate.application.condition.GetBlockCondition;
import com.lifetech.dhap.pathcloud.dehydrate.application.dto.DehydratorDto;
import com.lifetech.dhap.pathcloud.dehydrate.application.dto.DehydratorStatusDto;
import com.lifetech.dhap.pathcloud.dehydrate.domain.model.BlockInfo;
import com.lifetech.dhap.pathcloud.dehydrate.domain.model.Dehydrator;

import java.util.List;

public interface DehydratorRepository {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dehydrator
     *
     * @mbggenerated Tue Dec 13 16:37:30 CST 2016
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dehydrator
     *
     * @mbggenerated Tue Dec 13 16:37:30 CST 2016
     */
    int insert(Dehydrator record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dehydrator
     *
     * @mbggenerated Tue Dec 13 16:37:30 CST 2016
     */
    Dehydrator selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dehydrator
     *
     * @mbggenerated Tue Dec 13 16:37:30 CST 2016
     */
    List<Dehydrator> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dehydrator
     *
     * @mbggenerated Tue Dec 13 16:37:30 CST 2016
     */
    int updateByPrimaryKey(Dehydrator record);
    
    Dehydrator selectByInstrumentId(long instrumentId);
    
    int deleteByInstrumentId(Long instrumentId);
    
    List<DehydratorStatusDto> selectAllStatus();

    List<DehydratorDto> selectInfoByCondition(DehydratorCondition con);

    Long countInfoByCondition(DehydratorCondition con);

    Long last();
    DehydratorDto getLastDehydrator(Long id);

    List<BlockInfo> selectBlockInfoByCondition(GetBlockCondition condition);
}