package com.lifetech.dhap.pathcloud.dehydrate.domain;

import com.lifetech.dhap.pathcloud.dehydrate.application.condition.InstrumentCondition;
import com.lifetech.dhap.pathcloud.dehydrate.application.dto.InstrumentDto;
import com.lifetech.dhap.pathcloud.dehydrate.domain.model.Instrument;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface InstrumentRepository {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table instrument
     *
     * @mbggenerated Wed Dec 14 14:18:02 CST 2016
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table instrument
     *
     * @mbggenerated Wed Dec 14 14:18:02 CST 2016
     */
    int insert(Instrument record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table instrument
     *
     * @mbggenerated Wed Dec 14 14:18:02 CST 2016
     */
    Instrument selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table instrument
     *
     * @mbggenerated Wed Dec 14 14:18:02 CST 2016
     */
    List<Instrument> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table instrument
     *
     * @mbggenerated Wed Dec 14 14:18:02 CST 2016
     */
    int updateByPrimaryKey(Instrument record);
    
    Instrument selectAvailableBySerialNumber(String sn);

    Instrument selectAllBySerialNumber(String sn);

    Instrument selectByNameAndType(@Param("name") String name,@Param("type") int type);

    Instrument selectBySnAndType(@Param("sn") String sn,@Param("type") int type);

    List<Instrument> selectAvailable();

    List<Instrument> selectByCondition(InstrumentCondition condition);
    long countByCondition(InstrumentCondition condition);

    long last();

    List<Instrument> getInstrument(Integer type);
}