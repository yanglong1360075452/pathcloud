package com.lifetech.dhap.pathcloud.dehydrate.domain;

import com.lifetech.dhap.pathcloud.dehydrate.application.condition.DehydratorErrorMsgCondition;
import com.lifetech.dhap.pathcloud.dehydrate.domain.model.DehydratorErrorMsg;
import com.lifetech.dhap.pathcloud.dehydrate.domain.model.InstrumentEvent;

import java.util.List;

public interface InstrumentEventRepository {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table instrument_event
     *
     * @mbggenerated Mon Dec 12 17:28:08 CST 2016
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table instrument_event
     *
     * @mbggenerated Mon Dec 12 17:28:08 CST 2016
     */
    int insert(InstrumentEvent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table instrument_event
     *
     * @mbggenerated Mon Dec 12 17:28:08 CST 2016
     */
    InstrumentEvent selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table instrument_event
     *
     * @mbggenerated Mon Dec 12 17:28:08 CST 2016
     */
    List<InstrumentEvent> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table instrument_event
     *
     * @mbggenerated Mon Dec 12 17:28:08 CST 2016
     */
    int updateByPrimaryKey(InstrumentEvent record);

    int updateByInstrumentId(InstrumentEvent record);

    List<DehydratorErrorMsg> selectMsgByCondition(DehydratorErrorMsgCondition condition);
    Long countMsgByCondition(DehydratorErrorMsgCondition condition);
}