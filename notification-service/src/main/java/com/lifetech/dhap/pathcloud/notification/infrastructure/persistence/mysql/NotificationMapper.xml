<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lifetech.dhap.pathcloud.notification.domain.NotificationRepository" >
  <resultMap id="BaseResultMap" type="com.lifetech.dhap.pathcloud.notification.domain.model.Notification" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 12:03:38 CST 2017.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="block_status" property="blockStatus" jdbcType="INTEGER" />
    <result column="path_id" property="pathId" jdbcType="BIGINT" />
    <result column="block_id" property="blockId" jdbcType="BIGINT" />
    <result column="abnormal_handle" property="abnormalHandle" jdbcType="INTEGER" />
    <result column="read_flag" property="readFlag" jdbcType="BIT" />
    <result column="receiver_type" property="receiverType" jdbcType="INTEGER" />
    <result column="receiver_id" property="receiverId" jdbcType="BIGINT" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 12:03:38 CST 2017.
    -->
    delete from system_notification
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lifetech.dhap.pathcloud.notification.domain.model.Notification" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 12:03:38 CST 2017.
    -->
    insert into system_notification (subject, source,
      content, note, type, path_id, block_status,
      block_id, abnormal_handle, read_flag, receiver_type,
      receiver_id, create_by, update_by, 
      create_time, update_time)
    values (#{subject,jdbcType=VARCHAR}, #{source,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR},
      #{note,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{pathId,jdbcType=BIGINT}, #{blockStatus,jdbcType=INTEGER},
      #{blockId,jdbcType=BIGINT}, #{abnormalHandle,jdbcType=INTEGER}, #{readFlag,jdbcType=BIT}, #{receiverType,jdbcType=INTEGER},
      #{receiverId,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT},
      now(), now())
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.lifetech.dhap.pathcloud.notification.domain.model.Notification" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 12:03:38 CST 2017.
    -->
    update system_notification
    <set>
      <if test="subject != null">subject = #{subject,jdbcType=VARCHAR},</if>
      <if test="content != null">content = #{content,jdbcType=VARCHAR},</if>
      <if test="note != null">note = #{note,jdbcType=VARCHAR},</if>
      <if test="type != null">type = #{type,jdbcType=INTEGER},</if>
      <if test="source != null">source = #{source,jdbcType=INTEGER},</if>
      <if test="pathId != null">path_id = #{pathId,jdbcType=BIGINT},</if>
      <if test="blockId != null">block_id = #{blockId,jdbcType=BIGINT},</if>
      <if test="abnormalHandle != null">abnormal_handle = #{abnormalHandle,jdbcType=INTEGER},</if>
      <if test="readFlag != null">read_flag = #{readFlag,jdbcType=BIT},</if>
      <if test="receiverType != null">receiver_type = #{receiverType,jdbcType=INTEGER},</if>
      <if test="receiverId != null">receiver_id = #{receiverId,jdbcType=BIGINT},</if>
      <if test="updateBy != null">update_by = #{updateBy,jdbcType=BIGINT},</if>
      update_time = now()
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 12:03:38 CST 2017.
    -->
    select id, subject, source, content, note, type, path_id, block_id, read_flag, receiver_type,
    receiver_id, create_by, update_by, create_time, update_time, abnormal_handle, block_status
    from system_notification
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 12:03:38 CST 2017.
    -->
    select id, subject, source, content, note, type, path_id, block_id, read_flag, receiver_type,
    receiver_id, create_by, update_by, create_time, update_time, abnormal_handle, block_status
    from system_notification
  </select>

  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="com.lifetech.dhap.pathcloud.notification.condition.NotificationCon" >
    <if test="handle == null">
      select t.id, t.subject, t.source, t.content, t.note, t.type, t.path_id, t.block_id, t1.read_flag, t.receiver_type,
      t.receiver_id, t.create_by, t.update_by, t.create_time, t.update_time, t.abnormal_handle, t.block_status
      from system_notification t
      inner join system_notification_receiver t1 on t.id = t1.notification_id and t1.receiver_id = #{receiverId,jdbcType=BIGINT}
      <where>
        <if test="readFlag != null">and t1.read_flag = #{readFlag,jdbcType=BIT}</if>
        <if test="filter != null">and (match(t.subject) against (#{filter,jdbcType=VARCHAR} in boolean mode))</if>
      </where>
      <if test="order != null">ORDER BY ${order}</if>
      limit #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
    </if>
    <if test="handle != null">
      select t.id, t.subject, t.source, t.content, t.note, t.type, t.path_id, t.block_id, t1.read_flag, t.receiver_type,
      t.receiver_id, t.create_by, t.update_by, t.create_time, t.update_time, t.abnormal_handle, t.block_status
      from system_notification t
      inner join system_notification_receiver t1 on t.id = t1.notification_id and t1.receiver_id = #{receiverId,jdbcType=BIGINT}
      inner join block b on t.block_id = b.id and t.source not in (1, 13)
      <where>
        <if test="readFlag != null">and t1.read_flag = #{readFlag,jdbcType=BIT}</if>
        <if test="handle != null and handle == true">and t.block_status != b.status</if>
        <if test="handle != null and handle == false">and t.block_status = b.status</if>
        <if test="filter != null">and (match(t.subject) against (#{filter,jdbcType=VARCHAR} in boolean mode))</if>
      </where>
      union all
      select t.id, t.subject, t.source, t.content, t.note, t.type, t.path_id, t.block_id, t1.read_flag, t.receiver_type,
      t.receiver_id, t.create_by, t.update_by, t.create_time, t.update_time, t.abnormal_handle, t.block_status
      from system_notification t
      inner join system_notification_receiver t1 on t.id = t1.notification_id and t1.receiver_id = #{receiverId,jdbcType=BIGINT}
      inner join block_borrow b on t.receiver_id = b.id and t.source = 13
      <where>
        <if test="readFlag != null">and t1.read_flag = #{readFlag,jdbcType=BIT}</if>
        <if test="handle != null and handle == true">and b.status = 1</if>
        <if test="handle != null and handle == false">and b.status = 2</if>
        <if test="filter != null">and (match(t.subject) against (#{filter,jdbcType=VARCHAR} in boolean mode))</if>
      </where>
      union all
      select t.id, t.subject, t.source, t.content, t.note, t.type, t.path_id, t.block_id, t1.read_flag, t.receiver_type,
      t.receiver_id, t.create_by, t.update_by, t.create_time, t.update_time, t.abnormal_handle, t.block_status
      from system_notification t
      inner join system_notification_receiver t1 on t.id = t1.notification_id and t1.receiver_id = #{receiverId,jdbcType=BIGINT}
      inner join pathology p on t.path_id = p.id and t.source = 1
      <where>
        <if test="readFlag != null">and t1.read_flag = #{readFlag,jdbcType=BIT}</if>
        <if test="handle != null and handle == true">and t.block_status != p.status</if>
        <if test="handle != null and handle == false">and t.block_status = p.status</if>
        <if test="filter != null">and (match(t.subject) against (#{filter,jdbcType=VARCHAR} in boolean mode))</if>
      </where>
      <if test="order != null">ORDER BY ${order}</if>
      limit #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
    </if>
  </select>

  <select id="countByCondition" resultType="long" parameterType="com.lifetech.dhap.pathcloud.notification.condition.NotificationCon" >
    <if test="handle == null">
      select count(t.id)
      from system_notification t
      inner join system_notification_receiver t1 on t.id = t1.notification_id and t1.receiver_id =
      #{receiverId,jdbcType=BIGINT}
      <where>
        <if test="readFlag != null">and t1.read_flag = #{readFlag,jdbcType=BIT}</if>
        <if test="filter != null">and (match(t.subject) against (#{filter,jdbcType=VARCHAR} in boolean mode))</if>
      </where>
    </if>
    <if test="handle != null">
      select sum(total) from
      (select count(t.id) as total
      from system_notification t
      inner join system_notification_receiver t1 on t.id = t1.notification_id and t1.receiver_id =
      #{receiverId,jdbcType=BIGINT}
      inner join block b on t.block_id = b.id and t.source not in (1, 13)
      <where>
        <if test="readFlag != null">and t1.read_flag = #{readFlag,jdbcType=BIT}</if>
        <if test="handle != null and handle == true">and t.block_status != b.status</if>
        <if test="handle != null and handle == false">and t.block_status = b.status</if>
        <if test="filter != null">and (match(t.subject) against (#{filter,jdbcType=VARCHAR} in boolean mode))</if>
      </where>
      union all
      select count(t.id) as total
      from system_notification t
      inner join system_notification_receiver t1 on t.id = t1.notification_id and t1.receiver_id = #{receiverId,jdbcType=BIGINT}
      inner join block_borrow b on t.receiver_id = b.id and t.source = 13
      <where>
        <if test="readFlag != null">and t1.read_flag = #{readFlag,jdbcType=BIT}</if>
        <if test="handle != null and handle == true">and b.status = 1</if>
        <if test="handle != null and handle == false">and b.status = 2</if>
        <if test="filter != null">and (match(t.subject) against (#{filter,jdbcType=VARCHAR} in boolean mode))</if>
      </where>
      union all
      select count(t.id) as total
      from system_notification t
      inner join system_notification_receiver t1 on t.id = t1.notification_id and t1.receiver_id =
      #{receiverId,jdbcType=BIGINT}
      inner join pathology p on t.path_id = p.id and t.source = 1
      <where>
        <if test="readFlag != null">and t1.read_flag = #{readFlag,jdbcType=BIT}</if>
        <if test="handle != null and handle == true">and t.block_status != p.status</if>
        <if test="handle != null and handle == false">and t.block_status = p.status</if>
        <if test="filter != null">and (match(t.subject) against (#{filter,jdbcType=VARCHAR} in boolean mode))</if>
      </where>
      ) t
    </if>
  </select>

  <select id="checkNotification" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 12:03:38 CST 2017.
    -->
    select id, subject, source, content, note, type, path_id, block_id, read_flag, receiver_type,
    receiver_id, create_by, update_by, create_time, update_time, abnormal_handle, block_status
    from system_notification
    <where>
      abnormal_handle is null
      <if test="pathId != null">and path_id = #{pathId,jdbcType=BIGINT}</if>
      <if test="blockId != null">and block_id = #{blockId,jdbcType=BIGINT}</if>
      <if test="status != null">and block_status = #{status,jdbcType=INTEGER}</if>
    </where>
    limit 1
  </select>

  <select id="last" resultType="long" useCache="false">
    SELECT LAST_INSERT_ID()
  </select>
</mapper>